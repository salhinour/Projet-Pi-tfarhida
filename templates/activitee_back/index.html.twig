{% extends 'baseback.html.twig' %}
{% block title %}Activitee back Affichage{% endblock %}

{% block body %}


    <div id="table-actions" class="d-flex align-items-center justify-content-between mb-4">
        <div class="d-flex">
            <button id="btPrint" onclick="createPDF()" class="export-pdf-btn">
                <i class="fas fa-file-pdf"></i> Export PDF
            </button>
            <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search ..." class="form-control"
                id="search-input">
        </div>
        <form method="get" action="{{ path('app_activitee_back_index') }}">
    <input type="radio" name="etat" value="" {% if selectedState is empty %} checked {% endif %}> Tous
    <input type="radio" name="etat" value="accepte" {% if selectedState == 'accepte' %} checked {% endif %}> Accepté
    <input type="radio" name="etat" value="refuse" {% if selectedState == 'refuse' %} checked {% endif %}> Refusé
    <input type="radio" name="etat" value="encours" {% if selectedState == 'encours' %} checked {% endif %}> En cours
    <button type="submit">Filtrer</button>
</form>
    </div>





<div>
   <div class="container text-center">
    <a href="{{ path('app_activitee_back_new') }}" class="btn btn-primary btn-icon-split">
        <i class="fas fa-plus"></i> Create New
    </a>
    </div>
</div>



<table class="table" id="activitee-table">
    <thead>
        <tr>
            <th>Id</th>
            <th onclick="sortTable(1)">Nom</th>
            <th onclick="sortTable(2)">Prix</th>
            <th onclick="sortTable(3)">Localisation</th>
            <th onclick="sortTable(4)">NbP</th>
            <th>Etat</th>
            <th>Image</th>
            <th>Accepter</th>
            <th>Actions</th>
        </tr>
    </thead>
  <tbody>
    {% for activitee in pagination %}
    <tr class="etat-{{ activitee.etat }}">
        <td>{{ activitee.id }}</td>
        <td>{{ activitee.nom }}</td>
        <td>{{ activitee.prix }}</td>
        <td>{{ activitee.localisation }}</td>
        <td>{{ activitee.nbP }}</td>
        <td>{{ activitee.etat }}</td>
        <td><img src="{{ asset('uploads/' ~ activitee.image) }}" alt="Image" width="100" height="100"></td>
        <td>
            <a href="{{ path('app_modifier_etat_activite', {'id': activitee.id}) }}" class="btn-icon-split">
                <i class="fas fa-check text-success"></i>
            </a>
            <a href="{{ path('app_refuser_etat_activite', {'id': activitee.id}) }}" class="btn-icon-split">
                <i class="fas fa-times text-danger"></i>
            </a>
        </td>
        <td>
            <a href="{{ path('app_activitee_back_show', {'id': activitee.id}) }}" class="btn-icon-split">
                <i class="fas fa-eye text-primary"></i>
            </a>
            <a href="{{ path('app_activitee_back_edit', {'id': activitee.id}) }}" class="btn-icon-split">
                <i class="fas fa-edit text-secondary"></i>
            </a>
        </td>
    </tr>
    {% else %}
    <tr>
        <td colspan="8">no records found</td>
    </tr>
    {% endfor %}
</tbody>
    
</table>
<div class="pagination-container">
    <ul class="pagination">
        {% if pagination.currentPageNumber > 1 %}
            <li class="page-item">
                <a class="page-link" href="{{ path('app_activitee_back_index', {'page': pagination.currentPageNumber - 1}) }}" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        {% endif %}

        {% for page in range(1, pagination.pageCount) %}
            <li class="page-item {% if page == pagination.currentPageNumber %}active{% endif %}">
                <a class="page-link" href="{{ path('app_activitee_back_index', {'page': page}) }}">{{ page }}</a>
            </li>
        {% endfor %}

        {% if pagination.currentPageNumber < pagination.pageCount %}
            <li class="page-item">
                <a class="page-link" href="{{ path('app_activitee_back_index', {'page': pagination.currentPageNumber + 1}) }}" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        {% endif %}
    </ul>
</div>
{% endblock %}

{% block javascripts %}
 <script>
function createPDF() {
    var htmlContent = document.getElementById("activitee-table").outerHTML;
    var win = window.open('', '', 'height=700,width=700');
    win.document.write(htmlContent);
    win.document.close();
    win.print();
}
</script>
    <script>
 function myFunction() {
    var filter, table, tr, td, i, txtValue, stateFilter;

    // Get the selected state from the radio buttons
    var radios = document.getElementsByName('optionsRadios');
    for (var k = 0; k < radios.length; k++) {
        if (radios[k].checked) {
            stateFilter = radios[k].value;
            break;
        }
    }

    // Get the input value for the search
    filter = document.getElementById("myInput").value.toUpperCase();
    
    table = document.getElementById("activitee-table");
    tr = table.getElementsByTagName("tr");

    // Loop through all table rows
    for (i = 0; i < tr.length; i++) {
        var matchFound = false;
        // Loop through the cells of each row, starting from index 1 to skip the first cell (column names)
        for (var j = 1; j < tr[i].cells.length; j++) {
            td = tr[i].cells[j];
            if (td) {
                txtValue = td.textContent || td.innerText;
                // Check if the text in the current cell matches the filter or state
                if (txtValue.toUpperCase().indexOf(filter) > -1 || (stateFilter && txtValue === stateFilter)) {
                    matchFound = true;
                    break; // Exit the loop if a match is found in any cell
                }
            }
        }
        // Show or hide the row based on whether a match was found
        if (matchFound) {
            tr[i].style.display = "";
        } else {
            tr[i].style.display = "none";
        }
    }
}

</script>
<script>

  function sortTable(n) {
    var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
    table = document.getElementById("activitee-table");
    switching = true;
    dir = "asc";
    while (switching) {
        switching = false;
        rows = table.rows;
        for (i = 1; i < (rows.length - 1); i++) {
            shouldSwitch = false;
            x = rows[i].getElementsByTagName("TD")[n];
            y = rows[i + 1].getElementsByTagName("TD")[n];
            // Check the data type of the cells
            var xValue = isNaN(parseFloat(x.innerHTML)) ? x.innerHTML.toLowerCase() : parseFloat(x.innerHTML);
            var yValue = isNaN(parseFloat(y.innerHTML)) ? y.innerHTML.toLowerCase() : parseFloat(y.innerHTML);
            if (dir == "asc") {
                if (xValue > yValue) {
                    shouldSwitch = true;
                    break;
                }
            } else if (dir == "desc") {
                if (xValue < yValue) {
                    shouldSwitch = true;
                    break;
                }
            }
        }
        if (shouldSwitch) {
            rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
            switching = true;
            switchcount++;
        } else {
            if (switchcount == 0 && dir == "asc") {
                dir = "desc";
                switching = true;
            }
        }
    }
}
</script>



    

{% endblock %}
