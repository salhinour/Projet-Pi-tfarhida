{# {% extends 'baseBack.html.twig' %} #}
{% extends "admin/layout.html.twig" %}


{% block title %}Logement index{% endblock %}

{% block body %}

<button type="button" class="btn btn-primary btn-icon-split" data-toggle="modal" data-target="#statsModal">
    Show Stats
</button>
 <div class="d-flex align-items-center justify-content-between mb-4">
        <div class="d-flex">
        
        <div>
          
            <button id="btPrint" onclick="createPDF()" class="export-pdf-btn">
                <i class="fas fa-file-pdf"></i> Export PDF
            </button>  
            <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search ..." class="form-control" id="search-input">

            </div>



        </div>
					<div>	<button id="delete-selected-btn" style="display: none;" data-csrf-token="{{ csrf_token('delete_selected') }}" class="btn btn-danger">Delete Selected</button></div>

  <a href="{{ path('app_logement_back_new') }}" class="btn btn-success btn-icon-split ml-auto">
                <i class="fas fa-plus"></i> Create New
            </a>
        </div>
        <div class="d-flex align-items-center justify-content-between mb-4">

        
        <table class="table" id="myTable">
         <thead class="thead-dark">
            <tr>
            <th class="text-center">
										<div class="custom-checkbox custom-control">
											<input type="checkbox" data-checkboxes="mygroup"  class="custom-control-input" id="checkbox-all">
											<label for="checkbox-all" class="custom-control-label"></label>
										</div>
									</th>
                <th>Id</th>
                <th onclick="sortTable(1)">Nom</th>
                <th onclick="sortTable(2)">TypeLog</th>
                <th onclick="sortTable(3)">Eduipement_id</th>
                <th>Localisation</th>
                <th>Prix</th>
                <th>NoteMoyenne</th>
                <th>Etat</th>
                <th>Image</th>
                <th>actions</th>
                 <th>accepter</th>
            </tr>
        </thead>
        <tbody  id="myTable">
        {% for logement in pagination %}
            <tr>
            <td class="text-center">
				<div class="custom-checkbox custom-control">
				<input type="checkbox" data-checkboxes="mygroup" class="custom-control-input" id="checkbox-{{ logement.id }}">
					<label for="checkbox-{{ logement.id }}" class="custom-control-label"></label>
				</div>
					</td>
            
                <td>{{ logement.id }}</td>
                <td>{{ logement.nom }}</td>
                <td>{{ logement.TypeLog }}</td>
                 <td>
            {% if logement.equipement is not null %}
                {{ logement.equipement.id }}
            {% else %}
                N/A
            {% endif %}
        </td>


                <td>{{ logement.Localisation }}</td>
                <td>{{ logement.Prix }}</td>
                <td>{{ logement.NoteMoyenne }}</td>
                <td>{{ logement.Etat  }}</td>
                <td>
                   {% if logement.image %}
                       <img src="{{ asset('uploads/' ~ logement.image) }}" alt="Image" width="100" height="100">
                   {% else %}
                       <span>Aucune image</span>
                   {% endif %}
               </td>
                <td >
                 <div class="row">
                    
                    <a href="{{ path('app_logement_back_show', {'id': logement.id}) }}" >
                    <i class="fas fa-eye" style="color: green"></i>
                    
                    </a>
                        <a href="{{ path('app_logement_back_edit', {'id': logement.id}) }}" >
                        <i class="fas fa-pencil-alt"></i>
                    </a>
                   
                 </div>
              
                </td>
                <td>
                <a href="{{ path('app_modifier_etat_logement', {'id': logement.id}) }}">
                    <i class="fas fa-check"></i>
                </a>
            
                
                <a href="{{ path('app_refuser_etat_logement', {'id': logement.id}) }}">
                    <i class="fas fa-times" style="color: red"></i>
                </a>
                </td>


            </tr>
        {% else %}
            <tr>
                <td colspan="9">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
     </div>
    <div class="pagination-container">
    <ul class="pagination">
        {% if pagination.currentPageNumber > 1 %}
            <li class="page-item">
                <a class="page-link" href="{{ path('app_logement_back_index', {'page': pagination.currentPageNumber - 1}) }}" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
        {% endif %}

        {% for page in range(1, pagination.pageCount) %}
            <li class="page-item {% if page == pagination.currentPageNumber %}active{% endif %}">
                <a class="page-link" href="{{ path('app_logement_back_index', {'page': page}) }}">{{ page }}</a>
            </li>
        {% endfor %}

        {% if pagination.currentPageNumber < pagination.pageCount %}
            <li class="page-item">
                <a class="page-link" href="{{ path('app_logement_back_index', {'page': pagination.currentPageNumber + 1}) }}" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
        {% endif %}
    </ul>
</div>

<script>
		document.addEventListener('DOMContentLoaded', function() {
			const deleteButton = document.querySelector('#delete-selected-btn');
			const checkboxes = document.querySelectorAll('input[data-checkboxes="mygroup"]');
			const checkAllCheckbox = document.querySelector('input[data-checkboxes="mygroup"]');

			function updateDeleteButtonVisibility() {
				const isAnyCheckboxChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);
				deleteButton.style.display = isAnyCheckboxChecked ? 'inline-block' : 'none';
				console.log('Update Delete Button Visibility:', isAnyCheckboxChecked ? 'Show' : 'Hide');
			}

			if (checkboxes) {
				checkboxes.forEach(checkbox => {
					checkbox.addEventListener('change', function () {
						updateDeleteButtonVisibility();
					});
				});
			}

			if (checkAllCheckbox) {
				checkAllCheckbox.addEventListener('change', function() {
					const isChecked = this.checked;
					checkboxes.forEach(checkbox => {
						checkbox.checked = isChecked;
					});
					updateDeleteButtonVisibility();
				});
			}

			updateDeleteButtonVisibility();

			deleteButton.addEventListener('click', function() {

				const selectedIds = Array.from(checkboxes)
						.filter(checkbox => checkbox.checked)
						.map(checkbox => {
							const match = checkbox.id.match(/checkbox-(\d+)/);
							return match ? match[1] : null;
						})
				if (selectedIds.length > 0) {
					const csrfToken = this.getAttribute('data-csrf-token');
					console.log('Sending deletion request with CSRF token:', csrfToken);

					fetch('/logement/back/delete-selected, {
						method: 'POST',
						headers: { 'Content-Type': 'application/json' },
						body: JSON.stringify({ ids: selectedIds, '_token': csrfToken })
					})
							.then(response => {
								if (!response.ok) {
									throw new Error('Network response was not ok');
								}
								return response.json();
							})
							.then(data => {
								console.log('Deletion Success:', data);
								alert(data.message);
								window.location.reload();
							})
							.catch(error => {
								console.error('Deletion Error:', error);
								alert('Error deleting ');
							});
				}
			});
		});
	</script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
   <script>
       $(document).ready(function () {
           $("#myInput").on("keyup", function () {
               var value = $(this).val().toLowerCase();
               $("#myTable tr").filter(function () {
                   $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
               });
           })
       });
   </script>
     <script>

function createPDF() {
    var htmlContent = document.getElementById("myTable").outerHTML;
    var win = window.open('', '', 'height=700,width=700');
    win.document.write(htmlContent);
    win.document.close();
    win.print();
}
</script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<div class="category-statistics">
    <canvas id="categoryChart" width="300 px" height="100 px"></canvas>
</div>

<div class="modal fade" id="statsModal" tabindex="-1" role="dialog" aria-labelledby="statsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="statsModalLabel">Type Statistics</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <canvas id="modalCategoryChart" width="400" height="200"></canvas>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var modalCtx = document.getElementById('modalCategoryChart').getContext('2d');
        var colors = ['#87CEEB', '#012970', '#E29790'];

        var data = {
            labels: [
                {% for stat in typeStatistics %}
                    '{{ stat.TypeLog }} ({{ stat.TypeLogCount }})',
                {% endfor %}
            ],
            datasets: [{
                data: [
                    {% for stat in typeStatistics %}
                        {{ stat.TypeLogCount }},
                    {% endfor %}
                ],
                backgroundColor: colors
            }]
        };

        var modalCategoryChart = new Chart(modalCtx, {
            type: 'pie',
            data: data,
            options: {
                tooltips: {
                    callbacks: {
                        label: function (tooltipItem, data) {
                            var dataset = data.datasets[tooltipItem.datasetIndex];
                            var total = dataset.data.reduce(function (previousValue, currentValue, currentIndex, array) {
                                return previousValue + currentValue;
                            });
                            var currentValue = dataset.data[tooltipItem.index];
                            var percentage = Math.round((currentValue / total) * 100);
                            return data.labels[tooltipItem.index] + ': ' + currentValue + ' (' + percentage + '%)';
                        }
                    }
                }
            }
        });
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

{% endblock %}



